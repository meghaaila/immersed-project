[{"/Users/AMegha/Documents/immersed-project/src/index.js":"1","/Users/AMegha/Documents/immersed-project/src/App.js":"2","/Users/AMegha/Documents/immersed-project/src/reportWebVitals.js":"3","/Users/AMegha/Documents/immersed-project/src/components/header/header.js":"4","/Users/AMegha/Documents/immersed-project/src/components/Container/Container.js":"5","/Users/AMegha/Documents/immersed-project/src/components/Header/Header.js":"6","/Users/AMegha/Documents/immersed-project/src/components/CurrentInformation/CurrentInformation.js":"7","/Users/AMegha/Documents/immersed-project/src/components/Footer/Footer.js":"8","/Users/AMegha/Documents/immersed-project/src/components/AreaChart/AreaChart.js":"9","/Users/AMegha/Documents/immersed-project/src/config.js":"10","/Users/AMegha/Documents/immersed-project/src/components/Filters/Filters.js":"11","/Users/AMegha/Documents/immersed-project/src/components/CreateRoles/CreateRoles.js":"12"},{"size":500,"mtime":1611101223243,"results":"13","hashOfConfig":"14"},{"size":1035,"mtime":1611298411645,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611101223244,"results":"16","hashOfConfig":"14"},{"size":273,"mtime":1611123671719,"results":"17","hashOfConfig":"14"},{"size":2072,"mtime":1611305956338,"results":"18","hashOfConfig":"14"},{"size":996,"mtime":1611295220634,"results":"19","hashOfConfig":"14"},{"size":348,"mtime":1611277065055,"results":"20","hashOfConfig":"14"},{"size":247,"mtime":1611277071921,"results":"21","hashOfConfig":"14"},{"size":555,"mtime":1611305902775,"results":"22","hashOfConfig":"14"},{"size":307,"mtime":1611207655306,"results":"23","hashOfConfig":"14"},{"size":669,"mtime":1611305320344,"results":"24","hashOfConfig":"14"},{"size":3193,"mtime":1611301955038,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1eiloll",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/Users/AMegha/Documents/immersed-project/src/index.js",[],["53","54"],"/Users/AMegha/Documents/immersed-project/src/App.js",["55"],"import React, { useState, useEffect } from 'react';\n\nimport logo from './logo.svg';\nimport './App.scss';\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport CurrentInformation from \"./components/CurrentInformation/CurrentInformation\";\nimport Container from \"./components/Container/Container\";\nimport axios from \"axios\";\nfunction App() {\n  const [role, setRole] = useState('admin');\n  const [allRoles, getAllRoles] = useState({});\n\n\n  useEffect(() => {\n    const getData = async ()=> {\n      await axios.get('./data/data.json')\n      .then((res)=> {\n        getAllRoles(res.data.roles);\n      }).catch((err)=>{\n        console.log(err);\n      })\n    }\n    getData();\n  }, [])\n  return allRoles.length >0 ? (\n    <div className=\"App\">\n      <Header onClickCallBack={(val) => setRole(val.value)} roles ={allRoles}/>\n      <div className={role === \"admin\"? '' : 'hidden'}><CurrentInformation /> </div>\n      <Container />\n      <Footer />\n    </div>\n  ): <div/>;\n}\n\nexport default App;\n","/Users/AMegha/Documents/immersed-project/src/reportWebVitals.js",[],"/Users/AMegha/Documents/immersed-project/src/components/header/header.js",["56","57"],"/Users/AMegha/Documents/immersed-project/src/components/Container/Container.js",["58"],"/Users/AMegha/Documents/immersed-project/src/components/Header/Header.js",[],"/Users/AMegha/Documents/immersed-project/src/components/CurrentInformation/CurrentInformation.js",[],"/Users/AMegha/Documents/immersed-project/src/components/Footer/Footer.js",[],"/Users/AMegha/Documents/immersed-project/src/components/AreaChart/AreaChart.js",[],"/Users/AMegha/Documents/immersed-project/src/config.js",[],"/Users/AMegha/Documents/immersed-project/src/components/Filters/Filters.js",[],"/Users/AMegha/Documents/immersed-project/src/components/CreateRoles/CreateRoles.js",["59","60","61"],"import React, {Component} from 'react';\nimport \"./CreateRoles.scss\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nexport default class CreateRoles extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tcheckFlag: false,\n\t\t\tbusinessName: \"\",\n\t\t\tbusinessSite: \"\",\n\t\t\temail: \"\",\n\t\t\tpsw: \"\",\n\t\t\toptions: [{ value: 'admin', label: 'Admin' },\n        { value: 'team1', label: 'Team 1' },\n  \t\t\t\t\t{ value: 'team2', label: 'Team 2' },\n  \t\t\t\t\t{ value: 'team3', label: 'Team 3' }]\n\t\t}\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\thandleClick = (e) =>{\n\t\tconst name= e.target.name;\n\t\tconst val = e.target.value;\n\t\tif(val === \"\")\n\t\t\tthis.setState({checkFlag: true})\n\t\telse{\n\t\t\tthis.setState({[name]:val})\n\t\t}\n\t}\n\thandleSubmit = () =>{\n\t\tObject.keys(this.state).map((val) => {\n\t\t\tif(this.state[val] ==\"\")\n        this.setState({checkFlag: true})\n\t\t})\n\t\tif(!this.state.checkFlag){\n      console.log(\"Submitted\")\n    }\n    this.props.onClickCallBack(this.state)\n\t}\n\n\trender(){\n\t\treturn(\n      <Popup\n   trigger={<button className=\"primary\" id=\"createRoles\">Create roles </button>}\n   modal\n   nested\n >\n {close => (\n\t\t\t<div className=\"create-roles\">\n\t\t\t\t<div id=\"text\">\n\t\t\t\t\tTell us about yourself\n\t\t\t\t</div>\n\t\t\t\t <form>\n\t\t\t\t    <div>\n\t\t\t\t    \t<input type=\"text\" placeholder=\"What is the name of your business?\" required name=\"businessName\" onChange={this.handleClick} onFocus={this.handleClick}/>\n\t\t\t\t      \t<label className={this.state.businessName ===\"\" && this.state.checkFlag? \"\" : \"hidden\"}> Business name is required</label>\n\n\t\t\t\t      \t<input type=\"text\" placeholder=\"Business website\"  required onChange={this.handleClick}  name=\"businessSite\" onFocus={this.handleClick}/>\n\t\t\t\t      \t<label className={this.state.businessSite ===\"\" && this.state.checkFlag? \"\" : \"hidden\"}> Business website is required</label>\n\n\t\t\t\t\t\t    <Dropdown options={this.state.options} onChange={(val)=> {this.setState({ticketing: val.value})}} value={this.state.ticketing} placeholder=\"Select team\" name=\"options\" className=\"datalist\"/>\n                \t<label className={this.state.ticketing ===\"\" && this.state.checkFlag? \"\" : \"hidden\"}> Team name is required</label>\n\n\n\t\t\t\t      \t<input type=\"text\" placeholder=\"Your email\"  name=\"email\" required onChange={this.handleClick} onFocus={this.handleClick} />\n\t\t\t\t      \t<label className={this.state.email ===\"\" && this.state.checkFlag? \"\" : \"hidden\"}> Email is required</label>\n\n\t\t\t\t      \t<input type=\"password\" placeholder=\"Password\"  name=\"psw\" required onChange={this.handleClick} onFocus={this.handleClick}/>\n\t\t\t\t      \t<label className={this.state.psw ===\"\" && this.state.checkFlag? \"\" : \"hidden\"}> Password is required</label>\n\n\t\t\t\t      \t<span id=\"terms\"><input type=\"checkbox\"  name=\"terms\"/>I accept to the <a href=\"#\">Terms of Service </a></span>\n\t\t\t\t    </div>\n\t\t\t\t  </form>\n\t\t\t\t   <button className = \"primary\" onClick={(e)=> {\n             this.handleSubmit(e);\n             close();\n           }}>\n\t\t\t\t    \tSign up\n\t\t\t\t    </button>\n\t\t\t</div>\n      )}\n       </Popup>\n\t\t)\n\t}\n}\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":12},{"ruleId":"70","severity":1,"message":"71","line":8,"column":11,"nodeType":"72","endLine":8,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":8,"column":14,"nodeType":"72","endLine":8,"endColumn":49},{"ruleId":"66","severity":1,"message":"75","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":13},{"ruleId":"76","severity":1,"message":"77","line":35,"column":37,"nodeType":"78","messageId":"79","endLine":35,"endColumn":39},{"ruleId":"80","severity":1,"message":"81","line":36,"column":23,"nodeType":"82","messageId":"83","endLine":36,"endColumn":25},{"ruleId":"70","severity":1,"message":"84","line":75,"column":83,"nodeType":"72","endLine":75,"endColumn":95},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Popup' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]