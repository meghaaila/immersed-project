[{"/Users/AMegha/Documents/workspace/immersed-project/src/index.js":"1","/Users/AMegha/Documents/workspace/immersed-project/src/reportWebVitals.js":"2","/Users/AMegha/Documents/workspace/immersed-project/src/App.js":"3","/Users/AMegha/Documents/workspace/immersed-project/src/components/Footer/Footer.js":"4","/Users/AMegha/Documents/workspace/immersed-project/src/components/Header/Header.js":"5","/Users/AMegha/Documents/workspace/immersed-project/src/components/Container/Container.js":"6","/Users/AMegha/Documents/workspace/immersed-project/src/components/CurrentInformation/CurrentInformation.js":"7","/Users/AMegha/Documents/workspace/immersed-project/src/components/Filters/Filters.js":"8","/Users/AMegha/Documents/workspace/immersed-project/src/components/CreateRoles/CreateRoles.js":"9","/Users/AMegha/Documents/workspace/immersed-project/src/components/AreaChart/AreaChart.js":"10","/Users/AMegha/Documents/workspace/immersed-project/src/config.js":"11"},{"size":500,"mtime":1611101223243,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1611101223244,"results":"14","hashOfConfig":"13"},{"size":1074,"mtime":1612488508251,"results":"15","hashOfConfig":"13"},{"size":247,"mtime":1611277071921,"results":"16","hashOfConfig":"13"},{"size":1016,"mtime":1612489071541,"results":"17","hashOfConfig":"13"},{"size":2134,"mtime":1612488475083,"results":"18","hashOfConfig":"13"},{"size":1725,"mtime":1612489537984,"results":"19","hashOfConfig":"13"},{"size":669,"mtime":1611305320344,"results":"20","hashOfConfig":"13"},{"size":3193,"mtime":1611301955038,"results":"21","hashOfConfig":"13"},{"size":555,"mtime":1611305902775,"results":"22","hashOfConfig":"13"},{"size":307,"mtime":1611207655306,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"tgjrlv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/AMegha/Documents/workspace/immersed-project/src/index.js",[],["50","51"],"/Users/AMegha/Documents/workspace/immersed-project/src/reportWebVitals.js",[],"/Users/AMegha/Documents/workspace/immersed-project/src/App.js",["52"],"import React, { useState, useEffect } from 'react';\n\nimport logo from './logo.svg';\nimport './App.scss';\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport CurrentInformation from \"./components/CurrentInformation/CurrentInformation\";\nimport Container from \"./components/Container/Container\";\nimport axios from \"axios\";\nfunction App() {\n  const [role, setRole] = useState('admin');\n  const [allRoles, getAllRoles] = useState({});\n\n\n  useEffect(() => {\n    const getData = async ()=> {\n      await axios.get('./data/data.json')\n      .then((res)=> {\n        getAllRoles(res.data.roles);\n      }).catch((err)=>{\n        console.log(err);\n      })\n    }\n    getData();\n  }, [])\n  console.log(role);\n  return allRoles.length >0 ? (\n    <div className=\"App\">\n      <Header onClickCallBack={(val) => setRole(val.value)} roles ={allRoles}/>\n      <div className={role === \"admin\"? 'hidden' : ''}><CurrentInformation /> </div>\n      <Container currentRole={role}/>\n      <Footer />\n    </div>\n  ): <div/>;\n}\n\nexport default App;\n","/Users/AMegha/Documents/workspace/immersed-project/src/components/Footer/Footer.js",[],"/Users/AMegha/Documents/workspace/immersed-project/src/components/Header/Header.js",[],"/Users/AMegha/Documents/workspace/immersed-project/src/components/Container/Container.js",["53"],"import React, {Component} from \"react\";\nimport \"./Container.scss\";\nimport AreaChart from \"../AreaChart/AreaChart\";\nimport axios from \"axios\";\nimport Filters from \"../Filters/Filters\"\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport CreateRoles from \"../CreateRoles/CreateRoles\"\nconst url = './data/data.json'\nexport default class Container extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      data: {},\n      options: [\n        {value: 'nov2020', label: '11/2020 - 12/2020'},\n        {value: 'dec2020', label: '12/2020 - 01/2021'},\n        {value: 'jan2021', label: '01/2021-01/2021'}],\n      ind : \"nov2020\",\n      createRolesToggle: false\n    };\n    this.getData =  this.getData.bind(this);\n  }\n  async getData() {\n    await axios.get(url)\n    .then((res)=> {\n      this.setState({data: res.data.chartData[this.state.ind]})\n\n    }).catch((err)=>{\n      console.log(err);\n    })\n }\n\n async setRole(obj){\n   console.log(\"successfully added role:\", obj)\n   /*await axios.post(url, obj)\n   .then((res)=> {\n     console.log(\"successful addition of roles\")\n\n   }).catch((err)=>{\n     console.log(err);\n   })*/\n }\n\n  componentDidMount(){\n     this.getData();\n  }\n  render(){\n    return (\n      <div id=\"container\">\n        <div style={{padding: \"10px\", height: \"50px\"}}>\n          <div>\n            <button className=\"primary\">Teams</button>\n            <button className=\"secondary\">Self</button>\n          </div>\n          <div style={{float:'right'}} className={this.props.currentRole === \"admin\"? '' : 'hidden'}>\n            <CreateRoles  onClickCallBack={(obj) =>  this.setRole(obj)}/>\n          </div>\n        </div>\n        <Filters options = {this.state.options} onClickCallBack={(val) =>  this.setState({ind: val.value}, () => this.getData()) }/>\n        <div className=\"chart-areas\">\n           <div className=\"article\">{this.state.data.length >0 && <AreaChart data={this.state.data} type=\"area\" />}</div>\n          <div className=\"article\">{this.state.data.length >0 && <AreaChart data={this.state.data} type=\"bar\"/>}</div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","/Users/AMegha/Documents/workspace/immersed-project/src/components/CurrentInformation/CurrentInformation.js",["54"],"/Users/AMegha/Documents/workspace/immersed-project/src/components/Filters/Filters.js",[],"/Users/AMegha/Documents/workspace/immersed-project/src/components/CreateRoles/CreateRoles.js",["55","56","57"],"import React, {Component} from 'react';\nimport \"./CreateRoles.scss\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nexport default class CreateRoles extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tcheckFlag: false,\n\t\t\tbusinessName: \"\",\n\t\t\tbusinessSite: \"\",\n\t\t\temail: \"\",\n\t\t\tpsw: \"\",\n\t\t\toptions: [{ value: 'admin', label: 'Admin' },\n        { value: 'team1', label: 'Team 1' },\n  \t\t\t\t\t{ value: 'team2', label: 'Team 2' },\n  \t\t\t\t\t{ value: 'team3', label: 'Team 3' }]\n\t\t}\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\thandleClick = (e) =>{\n\t\tconst name= e.target.name;\n\t\tconst val = e.target.value;\n\t\tif(val === \"\")\n\t\t\tthis.setState({checkFlag: true})\n\t\telse{\n\t\t\tthis.setState({[name]:val})\n\t\t}\n\t}\n\thandleSubmit = () =>{\n\t\tObject.keys(this.state).map((val) => {\n\t\t\tif(this.state[val] ==\"\")\n        this.setState({checkFlag: true})\n\t\t})\n\t\tif(!this.state.checkFlag){\n      console.log(\"Submitted\")\n    }\n    this.props.onClickCallBack(this.state)\n\t}\n\n\trender(){\n\t\treturn(\n      <Popup\n   trigger={<button className=\"primary\" id=\"createRoles\">Create roles </button>}\n   modal\n   nested\n >\n {close => (\n\t\t\t<div className=\"create-roles\">\n\t\t\t\t<div id=\"text\">\n\t\t\t\t\tTell us about yourself\n\t\t\t\t</div>\n\t\t\t\t <form>\n\t\t\t\t    <div>\n\t\t\t\t    \t<input type=\"text\" placeholder=\"What is the name of your business?\" required name=\"businessName\" onChange={this.handleClick} onFocus={this.handleClick}/>\n\t\t\t\t      \t<label className={this.state.businessName ===\"\" && this.state.checkFlag? \"\" : \"hidden\"}> Business name is required</label>\n\n\t\t\t\t      \t<input type=\"text\" placeholder=\"Business website\"  required onChange={this.handleClick}  name=\"businessSite\" onFocus={this.handleClick}/>\n\t\t\t\t      \t<label className={this.state.businessSite ===\"\" && this.state.checkFlag? \"\" : \"hidden\"}> Business website is required</label>\n\n\t\t\t\t\t\t    <Dropdown options={this.state.options} onChange={(val)=> {this.setState({ticketing: val.value})}} value={this.state.ticketing} placeholder=\"Select team\" name=\"options\" className=\"datalist\"/>\n                \t<label className={this.state.ticketing ===\"\" && this.state.checkFlag? \"\" : \"hidden\"}> Team name is required</label>\n\n\n\t\t\t\t      \t<input type=\"text\" placeholder=\"Your email\"  name=\"email\" required onChange={this.handleClick} onFocus={this.handleClick} />\n\t\t\t\t      \t<label className={this.state.email ===\"\" && this.state.checkFlag? \"\" : \"hidden\"}> Email is required</label>\n\n\t\t\t\t      \t<input type=\"password\" placeholder=\"Password\"  name=\"psw\" required onChange={this.handleClick} onFocus={this.handleClick}/>\n\t\t\t\t      \t<label className={this.state.psw ===\"\" && this.state.checkFlag? \"\" : \"hidden\"}> Password is required</label>\n\n\t\t\t\t      \t<span id=\"terms\"><input type=\"checkbox\"  name=\"terms\"/>I accept to the <a href=\"#\">Terms of Service </a></span>\n\t\t\t\t    </div>\n\t\t\t\t  </form>\n\t\t\t\t   <button className = \"primary\" onClick={(e)=> {\n             this.handleSubmit(e);\n             close();\n           }}>\n\t\t\t\t    \tSign up\n\t\t\t\t    </button>\n\t\t\t</div>\n      )}\n       </Popup>\n\t\t)\n\t}\n}\n","/Users/AMegha/Documents/workspace/immersed-project/src/components/AreaChart/AreaChart.js",[],"/Users/AMegha/Documents/workspace/immersed-project/src/config.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":12},{"ruleId":"62","severity":1,"message":"66","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":13},{"ruleId":"62","severity":1,"message":"67","line":6,"column":15,"nodeType":"64","messageId":"65","endLine":6,"endColumn":22},{"ruleId":"68","severity":1,"message":"69","line":35,"column":37,"nodeType":"70","messageId":"71","endLine":35,"endColumn":39},{"ruleId":"72","severity":1,"message":"73","line":36,"column":23,"nodeType":"74","messageId":"75","endLine":36,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":75,"column":83,"nodeType":"78","endLine":75,"endColumn":95},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Popup' is defined but never used.","'setTeam' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]