[{"/Users/AMegha/Documents/immersed-project/src/index.js":"1","/Users/AMegha/Documents/immersed-project/src/App.js":"2","/Users/AMegha/Documents/immersed-project/src/reportWebVitals.js":"3","/Users/AMegha/Documents/immersed-project/src/components/header/header.js":"4","/Users/AMegha/Documents/immersed-project/src/components/Container/Container.js":"5","/Users/AMegha/Documents/immersed-project/src/components/Header/Header.js":"6","/Users/AMegha/Documents/immersed-project/src/components/CurrentInformation/CurrentInformation.js":"7","/Users/AMegha/Documents/immersed-project/src/components/Footer/Footer.js":"8","/Users/AMegha/Documents/immersed-project/src/components/AreaChart/AreaChart.js":"9","/Users/AMegha/Documents/immersed-project/src/config.js":"10","/Users/AMegha/Documents/immersed-project/src/components/Filters/Filters.js":"11","/Users/AMegha/Documents/immersed-project/src/components/CreateRoles/CreateRoles.js":"12"},{"size":500,"mtime":1611101223243,"results":"13","hashOfConfig":"14"},{"size":1035,"mtime":1611298411645,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611101223244,"results":"16","hashOfConfig":"14"},{"size":273,"mtime":1611123671719,"results":"17","hashOfConfig":"14"},{"size":2056,"mtime":1611300944314,"results":"18","hashOfConfig":"14"},{"size":996,"mtime":1611295220634,"results":"19","hashOfConfig":"14"},{"size":348,"mtime":1611277065055,"results":"20","hashOfConfig":"14"},{"size":247,"mtime":1611277071921,"results":"21","hashOfConfig":"14"},{"size":525,"mtime":1611276764819,"results":"22","hashOfConfig":"14"},{"size":307,"mtime":1611207655306,"results":"23","hashOfConfig":"14"},{"size":669,"mtime":1611293368701,"results":"24","hashOfConfig":"14"},{"size":3193,"mtime":1611301955038,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1eiloll",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/AMegha/Documents/immersed-project/src/index.js",[],["55","56"],"/Users/AMegha/Documents/immersed-project/src/App.js",["57"],"import React, { useState, useEffect } from 'react';\n\nimport logo from './logo.svg';\nimport './App.scss';\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport CurrentInformation from \"./components/CurrentInformation/CurrentInformation\";\nimport Container from \"./components/Container/Container\";\nimport axios from \"axios\";\nfunction App() {\n  const [role, setRole] = useState('admin');\n  const [allRoles, getAllRoles] = useState({});\n\n\n  useEffect(() => {\n    const getData = async ()=> {\n      await axios.get('./data/data.json')\n      .then((res)=> {\n        getAllRoles(res.data.roles);\n      }).catch((err)=>{\n        console.log(err);\n      })\n    }\n    getData();\n  }, [])\n  return allRoles.length >0 ? (\n    <div className=\"App\">\n      <Header onClickCallBack={(val) => setRole(val.value)} roles ={allRoles}/>\n      <div className={role === \"admin\"? '' : 'hidden'}><CurrentInformation /> </div>\n      <Container />\n      <Footer />\n    </div>\n  ): <div/>;\n}\n\nexport default App;\n","/Users/AMegha/Documents/immersed-project/src/reportWebVitals.js",[],"/Users/AMegha/Documents/immersed-project/src/components/header/header.js",["58","59"],"/Users/AMegha/Documents/immersed-project/src/components/Container/Container.js",["60"],"import React, {Component} from \"react\";\nimport \"./Container.scss\";\nimport AreaChart from \"../AreaChart/AreaChart\";\nimport axios from \"axios\";\nimport Filters from \"../Filters/Filters\"\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport CreateRoles from \"../CreateRoles/CreateRoles\"\nconst url = './data/data.json'\nexport default class Container extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      data: {},\n      options: [\n        {value: 'nov2020', label: '11/2020 - 12/2020'},\n        {value: 'dec2020', label: '12/2020 - 01/2021'},\n        {value: 'jan2021', label: '01/2021-01/2021'}],\n      ind : 0,\n      createRolesToggle: false\n    };\n    this.getData =  this.getData.bind(this);\n  }\n  async getData() {\n    await axios.get(url)\n    .then((res)=> {\n      this.setState({data: res.data.chartData[this.state.ind]})\n\n    }).catch((err)=>{\n      console.log(err);\n    })\n }\n\n async setRole(obj){\n   console.log(\"successfully added role:\", obj)\n   /*await axios.post(url, obj)\n   .then((res)=> {\n     console.log(\"successful addition of roles\")\n\n   }).catch((err)=>{\n     console.log(err);\n   })*/\n }\n\n  componentDidMount(){\n     this.getData();\n  }\n  render(){\n    return (\n      <div id=\"container\">\n        <div style={{padding: \"10px\", height: \"50px\"}}>\n          <div>\n            <button className=\"primary\">Teams</button>\n            <button className=\"secondary\">Self</button>\n          </div>\n          <div style={{float:'right'}}>\n            <CreateRoles  onClickCallBack={(obj) =>  this.setRole(obj)}/>\n          </div>\n        </div>\n        <Filters options = {this.state.options} onClickCallBack={(val) =>  this.setState({ind: 1}, () => this.getData()) }/>\n        <div className=\"chart-areas\">\n           <div className=\"article\">{this.state.data.length >0 && <AreaChart data={this.state.data} type=\"area\" />}</div>\n          <div className=\"article\">{this.state.data.length >0 && <AreaChart data={this.state.data} type=\"bar\"/>}</div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","/Users/AMegha/Documents/immersed-project/src/components/Header/Header.js",[],"/Users/AMegha/Documents/immersed-project/src/components/CurrentInformation/CurrentInformation.js",[],"/Users/AMegha/Documents/immersed-project/src/components/Footer/Footer.js",[],"/Users/AMegha/Documents/immersed-project/src/components/AreaChart/AreaChart.js",["61","62","63"],"import React from 'react'\nimport { Chart } from 'react-charts';\nconst config = require(\"../../config.js\")\n function AreaChart(props) {\n  const data = React.useMemo(\n    () => props.data,\n    []\n  )\n\n  const series = React.useMemo(\n     () => ({\n       type: props.type,\n     }),\n     []\n   )\n\n   const axes = React.useMemo(\n   () => config.config[props.type],\n   []\n )\n  return (\n    <div  style={{height: \"250px\"}}>\n       <Chart data={data} series={series} axes={axes} tooltip />\n    </div>\n  )\n}\n\nexport default AreaChart\n","/Users/AMegha/Documents/immersed-project/src/config.js",[],["64","65"],"/Users/AMegha/Documents/immersed-project/src/components/Filters/Filters.js",[],"/Users/AMegha/Documents/immersed-project/src/components/CreateRoles/CreateRoles.js",["66","67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":12},{"ruleId":"77","severity":1,"message":"78","line":8,"column":11,"nodeType":"79","endLine":8,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":8,"column":14,"nodeType":"79","endLine":8,"endColumn":49},{"ruleId":"73","severity":1,"message":"82","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":7,"column":5,"nodeType":"85","endLine":7,"endColumn":7,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":14,"column":6,"nodeType":"85","endLine":14,"endColumn":8,"suggestions":"88"},{"ruleId":"83","severity":1,"message":"87","line":19,"column":4,"nodeType":"85","endLine":19,"endColumn":6,"suggestions":"89"},{"ruleId":"69","replacedBy":"90"},{"ruleId":"71","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":35,"column":37,"nodeType":"94","messageId":"95","endLine":35,"endColumn":39},{"ruleId":"96","severity":1,"message":"97","line":36,"column":23,"nodeType":"98","messageId":"99","endLine":36,"endColumn":25},{"ruleId":"77","severity":1,"message":"100","line":75,"column":83,"nodeType":"79","endLine":75,"endColumn":95},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Popup' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useMemo has a missing dependency: 'props.data'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook React.useMemo has a missing dependency: 'props.type'. Either include it or remove the dependency array.",["104"],["105"],["101"],["102"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},"Update the dependencies array to be: [props.data]",{"range":"111","text":"112"},"Update the dependencies array to be: [props.type]",{"range":"113","text":"114"},{"range":"115","text":"114"},[191,193],"[props.data]",[284,286],"[props.type]",[363,365]]